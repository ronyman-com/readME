<%
// Safely extract with defaults at every level
const sidebar = locals.sidebarData || {};
const title = sidebar.title || 'Documentation';
const items = Array.isArray(sidebar.items) ? sidebar.items : [
  { text: 'Home', link: '/', icon: 'home' }
];
const currentPath = locals.currentPath || '/';

function isActive(link, current) {
  return link === current || (link !== '/' && current.startsWith(link));
}
%>

<div class="sidebar-header">
  <h1><%= title %></h1>
</div>

<nav class="sidebar-nav">
  <ul>
    <% items.forEach(item => { %>
      <li class="sidebar-item">
        <a href="<%= item.link || '#' %>"
           class="sidebar-link <%= isActive(item.link, currentPath) ? 'active' : '' %>">
          <% if (item.icon) { %>
            <i class="icon icon-<%= item.icon %>"></i>
          <% } %>
          <%= item.text %>
        </a>
        <% if (item.items) { %>
          <ul class="sidebar-submenu">
            <% item.items.forEach(subItem => { %>
              <!-- Same safe handling for subitems -->
            <% }); %>
          </ul>
        <% } %>
      </li>
    <% }); %>
  </ul>
</nav>

<script>
  // Initialize sidebar interactivity
  document.addEventListener('DOMContentLoaded', () => {
    // Toggle submenus when clicking on items with children
    document.querySelectorAll('.sidebar-item.has-children > .sidebar-link, .sidebar-subitem.has-children > .sidebar-sublink').forEach(link => {
      link.addEventListener('click', function(e) {
        // Don't navigate if clicking on caret or the link itself
        if (e.target.classList.contains('sidebar-caret') || e.currentTarget === this) {
          e.preventDefault();
          const parentItem = this.closest('li');
          const wasExpanded = this.getAttribute('aria-expanded') === 'true';
          
          // Toggle expanded state
          this.setAttribute('aria-expanded', !wasExpanded);
          parentItem.classList.toggle('expanded');
        }
      });
    });

    // Automatically expand active items
    document.querySelectorAll('.sidebar-link.active, .sidebar-sublink.active').forEach(activeLink => {
      let parentMenu = activeLink.closest('.sidebar-submenu');
      while (parentMenu) {
        const parentItem = parentMenu.closest('li');
        const parentLink = parentItem.querySelector('> .sidebar-link, > .sidebar-sublink');
        
        parentItem.classList.add('expanded');
        if (parentLink) {
          parentLink.setAttribute('aria-expanded', 'true');
        }
        
        parentMenu = parentMenu.closest('.sidebar-submenu');
      }
    });
  });
</script>